<?php
namespace SpfPhp;

/**
 * An element instance to be generated by the adapter. This
 * provides access to all of the relevant metadata of an element.
 * 
 * @author The Rehike Maintainers
 * @license MIT
 */
class Element
{
    /** @var string */
    public $innerHTML;

    /** @var string[] */
    public $attributes;

    /** @var string[] */
    public $xtags;

    /**
     * Get the attribute of an element.
     * 
     * @param $name of the attribute
     * @return string|null
     */
    public function getAttribute($name)
    {
        return $this->attributes[$name] ?? null;
    }

    /**
     * Get the ID of an element.
     * 
     * @return string
     */
    public function getID()
    {
        return $this->attributes["id"] ?? null;
    }

    /**
     * Check if an attribute exists.
     * 
     * @param $name of the attribute
     * @return bool
     */
    public function hasAttribute($name)
    {
        return null != $this->getAttribute($name);
    }

    /**
     * Get an SpfPhp x-tag of an element.
     * 
     * @param $name of the x-tag
     * @return string|null
     */
    public function getXtag($name)
    {
        return $this->xtags[$name] ?? null;
    }

    /**
     * @param string $innerHTML
     * @param string[] $attributes
     * @param string[] $xtags
     */
    public function __construct($innerHTML, $attributes, $xtags)
    {
        $this->innerHTML = $innerHTML;
        $this->attributes = $attributes;
        $this->xtags = $xtags;
    }
}